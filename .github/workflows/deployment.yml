name: Deploy to Aws Backend Services
on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select The environment
        default: dev
        required: true
      release-build:
        type: boolean
        description: Wheather is this a release build?
        default: false
concurrency:
  group: ${{github.workflow}}-${{github.ref}}-${{github.event.environment || 'dev'}}
  cancel-in-progress: true
jobs:
  deploy:
    runs-on: self-hosted-aws-backend
    env:
      RUN_ID: ${{github.run_id}}
      APP_NAME: spring-docker-poc
      NAME_SPACE: api-services 
      REGISTRY: 773120352783.dkr.ecr.ap-south-1.amazonaws.com

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
         fetch-depth: 0

    - name: Export branch name as Env variable
      uses: nelonoel/branch-name@v1.0.1
    
    - name: Compile and Run Tests
      run: mvn -U clean package    
      
    - name: Set Image Tag
      id: sets-image-tag
      env:
         RELEASE_BUILD: ${{github.event.inputs.release-build}}
      run: |
         if [[ $RELEASE_BUILD == true ]]; then
            echo "IMAGE_TAG=${{env.REGISTRY}}/${{env.NAME_SPACE}}/${{env.APP_NAME}}:${{env.BRANCH_NAME}}-${{env.RUN_ID}}"  >> $GITHUB_ENV
         else
            echo "IMAGE_TAG=${{env.REGISTRY}}/${{env.NAME_SPACE}}/${{env.APP_NAME}}:devbuild-${{env.BRANCH_NAME}}-${{env.RUN_ID}}"  >> $GITHUB_ENV
         fi

    - name: Build Docker image
      run: mvn spring-boot:build-image -DskipTests

    - name: Login to AWS ECR
      run : sudo aws ecr get-login-password --region ap-south-1 | sudo docker login --username AWS --password-stdin 773120352783.dkr.ecr.ap-south-1.amazonaws.com

    - name: Push Docker image
      run: sudo docker push ${{env.IMAGE_TAG}}

    - name: Run Docker image
      run: sudo docker run -d -p 8080:8080 ${{env.IMAGE_TAG}}
